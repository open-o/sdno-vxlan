{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Vxlan NBI",
        "description": "API of SDN-O Lifecycle Vxlan service",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/openoapi/sdnovxlan/v1",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/vxlans": {
            "post": {
                "summary": "Create vxlan",
                "description": "it will create vxlan specified in requests.",
                "operationId": "createVxlan",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "a OverlayVpn Object which contains the configurations used to create vxlan",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OverlayVpn"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "create vxlan success.",
                        "schema": {
                            "$ref": "#/definitions/OverlayVpnResultRsp"
                        }
                    },
                    "400": {
                        "description": "create vxlan failure as parameters invalid."
                    },
                    "401": {
                        "description": "unauthorized."
                    },
                    "404": {
                        "description": "create vxlan failure as can't reach server."
                    },
                    "500": {
                        "description": "create vxlan failure as inner error."
                    }
                }
            }
        },
        "/vxlans/{connectionid}": {
            "delete": {
                "summary": "Delete a specified vxlan",
                "description": "it will delete a specified vxlan",
                "operationId": "deleteVxlan",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "connectionid",
                        "in": "path",
                        "description": "vxlan connection UUID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete a vxlan Connection success.",
                        "schema": {
                            "$ref": "#/definitions/OverlayVpnResultRsp"
                        }
                    },
                    "400": {
                        "description": "delete a vxlan Connection failure as parameters invalid."
                    },
                    "401": {
                        "description": "unauthorized."
                    },
                    "404": {
                        "description": "delete a vxlan Connection failure as can't reach server."
                    },
                    "500": {
                        "description": "delete a vxlan Connection failure as inner error."
                    }
                }
            }
        },
        "/vxlans/{connectionid}/vxlantunnels": {
            "get": {
                "summary": "Query a Tunnel",
                "description": "it will query a Tunnel",
                "operationId": "queryTunnel",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "connectionid",
                        "in": "path",
                        "description": "vxlan Connection UUID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "query a Tunnel success.",
                        "schema": {
                            "$ref": "#/definitions/TunnelResultRsp"
                        }
                    },
                    "400": {
                        "description": "query a IpSec Connection failure as parameters invalid."
                    },
                    "401": {
                        "description": "unauthorized."
                    },
                    "404": {
                        "description": "query a IpSec Connection failure as can't reach server."
                    },
                    "500": {
                        "description": "query a IpSec Connection failure as inner error."
                    }
                }
            }
        }
    },
    "definitions": {
        "TunnelResultRsp": {
            "type": "object",
            "description": "String result model",
            "required": [
                "errorCode",
                "httpCode"
            ],
            "properties": {
                "errorCode": {
                    "type": "string",
                    "description": "result error code"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tunnel"
                    },
                    "description": "The return data list"
                },
                "descArg": {
                    "type": "string",
                    "description": "The description args"
                },
                "reasonArg": {
                    "type": "string",
                    "description": "The reason args"
                },
                "detailArg": {
                    "type": "string",
                    "description": "The detail args"
                },
                "adviceArg": {
                    "type": "string",
                    "description": "The advice args"
                },
                "httpCode": {
                    "type": "integer",
                    "description": "The http status code"
                },
                "message": {
                    "type": "string",
                    "description": "the exception message word"
                },
                "smallErrorCodeList": {
                    "$ref": "#/definitions/ErrorCodeInfo"
                },
                "successed": {
                    "type": "object",
                    "description": "the successed list."
                },
                "fail": {
                    "type": "object",
                    "description": "the failed list."
                }
            }
        },
        "Tunnel": {
            "type": "object",
            "description": "the tunnel model",
            "required": [
                "serviceId",
                "tunnelType",
                "tunnelId",
                "srcNeId",
                "srcIp",
                "dstNeId"
            ],
            "properties": {
                "serviceId": {
                    "type": "string",
                    "description": "service uuid"
                },
                "tunnelType": {
                    "type": "string",
                    "description": "tunnel Type"
                },
                "tunnelId": {
                    "type": "string",
                    "description": "tunnel uuid"
                },
                "srcNeId": {
                    "type": "string",
                    "description": "src Ne uuid"
                },
                "srcIp": {
                    "type": "string",
                    "description": "src Ip"
                },
                "dstNeId": {
                    "type": "string",
                    "description": "dst Ne uuid"
                },
                "dstIp": {
                    "type": "string",
                    "description": "dst Ip"
                },
                "vni": {
                    "type": "string",
                    "description": "vni"
                }
            }
        },
        "OverlayVpnResultRsp": {
            "type": "object",
            "description": "String result model",
            "required": [
                "errorCode",
                "httpCode"
            ],
            "properties": {
                "errorCode": {
                    "type": "string",
                    "description": "result error code"
                },
                "data": {
                    "$ref": "#/definitions/OverlayVpn"
                },
                "descArg": {
                    "type": "string",
                    "description": "The description args"
                },
                "reasonArg": {
                    "type": "string",
                    "description": "The reason args"
                },
                "detailArg": {
                    "type": "string",
                    "description": "The detail args"
                },
                "adviceArg": {
                    "type": "string",
                    "description": "The advice args"
                },
                "httpCode": {
                    "type": "integer",
                    "description": "The http status code"
                },
                "message": {
                    "type": "string",
                    "description": "the exception message word"
                },
                "smallErrorCodeList": {
                    "$ref": "#/definitions/ErrorCodeInfo"
                },
                "successed": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "description": "the successed list."
                },
                "fail": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "description": "the failed list."
                }
            }
        },
        "OverlayVpn": {
            "type": "object",
            "description": "OverlayVpn object",
            "required": [
                "vpnConnections",
                "adminStatus"
            ],
            "properties": {
                "vpnConnections": {
                    "$ref": "#/definitions/Connection"
                },
                "adminStatus": {
                    "type": "string",
                    "enum": [
                        "none",
                        "active",
                        "inactive",
                        "partially inactive"
                    ],
                    "description": "admin status"
                },
                "operStatus": {
                    "type": "string",
                    "enum": [
                        "none",
                        "up",
                        "down",
                        "partially down"
                    ],
                    "description": "oper Status"
                },
                "actionState": {
                    "type": "string",
                    "enum": [
                        "Normal",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Create_Excepion",
                        "Delete_Exception",
                        "Update_Exception"
                    ],
                    "description": "action status"
                },
                "createTime": {
                    "type": "string",
                    "description": "createModelTime(min=0, max=255)"
                },
                "source": {
                    "type": "string",
                    "enum": [
                        "None",
                        "User",
                        "Discovery"
                    ],
                    "description": "source type"
                }
            }
        },
        "Connection": {
            "type": "object",
            "description": "Connection data model",
            "required": [
                "topology",
                "technology",
                "compositeVpnId"
            ],
            "properties": {
                "topology": {
                    "type": "string",
                    "description": "topology type"
                },
                "technology": {
                    "type": "string",
                    "description": "technology type"
                },
                "compositeVpnId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "compositeVpn uuid"
                },
                "mappingPolicyId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "mappingPolicy uuid"
                },
                "epgIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "format": "uuid",
                    "description": "epg uuid list"
                },
                "endpointGroups": {
                    "$ref": "#/definitions/EndpointGroup"
                },
                "greMappingPolicy": {
                    "$ref": "#/definitions/GreMappingPolicy"
                },
                "ipsecMappingPolicy": {
                    "$ref": "#/definitions/IpsecMappingPolicy"
                },
                "vxlanMappingPolicy": {
                    "$ref": "#/definitions/VxlanMappingPolicy"
                }
            }
        },
        "EndpointGroup": {
            "type": "object",
            "description": "Error code information model",
            "required": [
                "type",
                "endpoints",
                "neId",
                "connectionId"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "subnet",
                        "cidr",
                        "network",
                        "router",
                        "port",
                        "port-and-vlan",
                        "vni",
                        "cidr_with_l2access",
                        "vpc"
                    ],
                    "description": "resource type"
                },
                "endpoints": {
                    "type": "string",
                    "description": "endpoints"
                },
                "cidr": {
                    "type": "string",
                    "description": "cidr"
                },
                "endpointList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "endpoint list"
                },
                "portNativeIdToVlanMap": {
                    "type": "string",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "port native uuid to vlan map"
                },
                "siteType": {
                    "type": "string",
                    "description": "site type"
                },
                "gatewayId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "gateway uuid"
                },
                "neId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ne uuid"
                },
                "deviceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "device uuid"
                },
                "topologyRole": {
                    "type": "string",
                    "enum": [
                        "none",
                        "hub",
                        "spoke"
                    ],
                    "description": "topology role"
                },
                "connectionId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "connection uuid"
                },
                "qosPolicyId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "qosPolicy uuid"
                },
                "gateway": {
                    "$ref": "#/definitions/Gateway"
                }
            }
        },
        "GreMappingPolicy": {
            "type": "object",
            "description": "GreMappingPolicy model",
            "required": [
                "psk",
                "type"
            ],
            "properties": {
                "greTunnelKey": {
                    "type": "string",
                    "description": "gre tunnel key"
                },
                "authMode": {
                    "type": "string",
                    "enum": [
                        "PSK",
                        "certificate"
                    ],
                    "description": "auth mode"
                },
                "psk": {
                    "type": "string",
                    "description": "psk"
                },
                "type": {
                    "type": "string",
                    "description": "resource type"
                },
                "ikePolicyId": {
                    "type": "string",
                    "description": "ikePolicy uuid"
                },
                "ipsecPolicyId": {
                    "type": "string",
                    "description": "ipsecPolicy uuid"
                },
                "ikePolicy": {
                    "$ref": "#/definitions/IkePolicy"
                },
                "ipSecPolicy": {
                    "$ref": "#/definitions/IpSecPolicy"
                }
            }
        },
        "IpsecMappingPolicy": {
            "type": "object",
            "description": "IpsecMappingPolicy model",
            "required": [
                "psk",
                "type"
            ],
            "properties": {
                "routeMode": {
                    "type": "string",
                    "enum": [
                        "static"
                    ],
                    "description": "route mode"
                },
                "authMode": {
                    "type": "string",
                    "enum": [
                        "PSK",
                        "certificate"
                    ],
                    "description": "auth mode"
                },
                "psk": {
                    "type": "string",
                    "description": "psk"
                },
                "type": {
                    "type": "string",
                    "description": "resource type"
                },
                "ikePolicyId": {
                    "type": "string",
                    "description": "ikePolicy uuid"
                },
                "ipsecPolicyId": {
                    "type": "string",
                    "description": "ipsecPolicy uuid"
                },
                "ikePolicy": {
                    "$ref": "#/definitions/IkePolicy"
                },
                "ipSecPolicy": {
                    "$ref": "#/definitions/IpSecPolicy"
                }
            }
        },
        "VxlanMappingPolicy": {
            "type": "object",
            "description": "VxlanMappingPolicy model",
            "required": [
                "type"
            ],
            "properties": {
                "arpProxy": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false"
                    ],
                    "description": "arp Proxy"
                },
                "arpBroadcastSuppress": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false"
                    ],
                    "description": "arp Broadcast Suppress"
                },
                "type": {
                    "type": "string",
                    "description": "resource type"
                },
                "ikePolicyId": {
                    "type": "string",
                    "description": "ikePolicy uuid"
                },
                "ipsecPolicyId": {
                    "type": "string",
                    "description": "ipsecPolicy uuid"
                },
                "ikePolicy": {
                    "$ref": "#/definitions/IkePolicy"
                },
                "ipSecPolicy": {
                    "$ref": "#/definitions/IpSecPolicy"
                }
            }
        },
        "Gateway": {
            "type": "object",
            "description": "Gateway model",
            "required": [
                "ipAddress",
                "neId",
                "name"
            ],
            "properties": {
                "ipAddress": {
                    "type": "string",
                    "description": "the ip address"
                },
                "neId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "the ne uuid"
                },
                "deviceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "device uuid"
                },
                "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "tenant uuid"
                },
                "name": {
                    "type": "string",
                    "description": "model name"
                },
                "description": {
                    "type": "string",
                    "description": "model description"
                },
                "modifyMask": {
                    "type": "string",
                    "description": "modify mask"
                },
                "additionalInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NvString"
                    },
                    "description": "additional Information"
                }
            }
        },
        "IkePolicy": {
            "type": "object",
            "description": "IKE Policy",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "IkePolicy UUID"
                },
                "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Tenant UUID"
                },
                "name": {
                    "type": "string",
                    "description": "IkePolicy name"
                },
                "description": {
                    "type": "string",
                    "description": "IkePolicy description"
                },
                "authAlgorithm": {
                    "type": "string",
                    "description": "auth hash algorithm (sha1)"
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "encryption algorithm (3des,aes-128,aes-256,aes-192)"
                },
                "pfs": {
                    "type": "string",
                    "description": "Perfect forward secrecy (group2, group5, group14)"
                },
                "lifeTime": {
                    "type": "string",
                    "description": "Lifetime value in seconds"
                },
                "ikeVersion": {
                    "type": "string",
                    "description": "v1 or v2 version"
                }
            }
        },
        "IpSecPolicy": {
            "type": "object",
            "description": "IpSec Policy",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "IpSecPolicy UUID"
                },
                "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Tenant UUID"
                },
                "name": {
                    "type": "string",
                    "description": "IpSecPolicy name"
                },
                "description": {
                    "type": "string",
                    "description": "IpSecPolicy description"
                },
                "authAlgorithm": {
                    "type": "string",
                    "description": "auth hash algorithm (sha1)"
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "encryption algorithm (3des, aes-128, aes-256, aes-192)"
                },
                "pfs": {
                    "type": "string",
                    "description": "Perfect forward secrecy (group2, group5, group14)"
                },
                "lifeTime": {
                    "type": "string",
                    "description": "Lifetime value in seconds"
                },
                "transformProtocol": {
                    "type": "string",
                    "description": "Transform protocol (esp, ah, ah-esp)"
                },
                "encapsulationMode": {
                    "type": "string",
                    "description": "Encapsulation mode (tunnel, transport)"
                }
            }
        },
        "NvString": {
            "type": "object",
            "description": "NvString",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "value": {
                    "type": "string",
                    "description": "value"
                },
                "firstParentUuid": {
                    "type": "string",
                    "description": "first Parent Uuid"
                }
            }
        },
        "ErrorCodeInfo": {
            "type": "object",
            "description": "Error code information model",
            "required": [
                "errorCode",
                "description",
                "objectId",
                "objectName",
                "object",
                "descArg",
                "reasonArg",
                "detailArg"
            ],
            "properties": {
                "errorCode": {
                    "type": "string",
                    "description": "error code"
                },
                "description": {
                    "type": "string",
                    "description": "error description"
                },
                "objectId": {
                    "type": "string",
                    "description": "object Id"
                },
                "objectName": {
                    "type": "string",
                    "description": "object Name"
                },
                "object": {
                    "type": "object",
                    "description": "object"
                },
                "descArg": {
                    "type": "string",
                    "description": "The description args"
                },
                "reasonArg": {
                    "type": "string",
                    "description": "The reason args"
                },
                "detailArg": {
                    "type": "string",
                    "description": "The detail args"
                }
            }
        }
    }
}